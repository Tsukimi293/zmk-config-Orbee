#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#define MOUSE 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        ScrollMode {
            bindings = <&mo 5>;
            key-positions = <31 32>;
        };

        L1_L2_to_L4 {
            bindings = <&mo 4>;
            key-positions = <39 38>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q               &kp W      &kp E     &kp R                         &kp T                                        &kp Y                          &kp U  &kp I      &kp O      &kp P
&mt LEFT_CONTROL A  &kp S      &kp D     &kp F                         &kp G        &kp TAB        &kp MINUS        &kp H                          &kp J  &kp K      &kp L      &mt RIGHT_CONTROL ENTER
&mt LEFT_SHIFT Z    &kp X      &kp C     &kp V                         &kp B        &kp COMMA      &kp DOT          &kp N                          &kp M  &mkp LCLK  &mkp RCLK  &mt RIGHT_SHIFT UNDERSCORE
&kp LCTRL           &kp LSHFT  &kp LALT  &mt LEFT_GUI INTERNATIONAL_5  &lt 1 SPACE  &lt 2 ENTER    &lt 3 BACKSPACE  &mt RIGHT_GUI INTERNATIONAL_4                               &kp ESC
            >;

            sensor-bindings =
                <&inc_dec_kp A B>,
                <&inc_dec_kp PG_DN PG_UP>,
                <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        layer_1 {
            bindings = <
&kp EXCLAMATION  &kp DOUBLE_QUOTES  &kp POUND          &kp HASH         &kp PERCENT                    &kp AMPERSAND  &kp SQT  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp CARET
&kp C_BRI_INC    &kp C_BRI_UP       &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &trans       &trans    &trans  &trans         &trans   &trans                &kp AT                 &kp LBKT
&kp LS(LG(S))    &trans             &trans             &trans           &trans       &trans    &trans  &trans         &trans   &kp SEMI              &kp COLON              &kp RBKT
&trans           &trans             &trans             &trans           &trans       &trans    &trans  &trans                                                               &kp UNDER
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_2 {
            bindings = <
&kp LG(TAB)   &kp LC(LG(LEFT))  &kp UP    &kp LC(LG(RIGHT))  &kp LC(LA(TAB))                    &trans  &trans  &trans  &trans  &trans
&kp LC(HOME)  &kp LEFT          &kp DOWN  &kp RIGHT          &kp LC(END)      &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans        &kp LG(LEFT)      &trans    &kp LG(RIGHT)      &trans           &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans        &trans            &trans    &trans             &trans           &trans    &trans  &trans                          &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_3 {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                     &trans  &trans  &trans  &trans  &trans
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans                  &trans          &trans                   &trans   &trans    &trans  &trans                          &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                         &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &trans    &trans       &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans    &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans    &trans       &trans                                                  &bt BT_CLR_ALL
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                          &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans     &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans     &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &mkp LCLK  &mkp RCLK  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                                &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };
    };
};
